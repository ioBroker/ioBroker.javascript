{"version":3,"file":"typescriptSettings.js","sourceRoot":"","sources":["../../src/lib/typescriptSettings.ts"],"names":[],"mappings":";;;AAAA,2CAAgE;AAEhE,8CAA8C;AAC9C,uEAAuE;AAC1D,QAAA,WAAW,GAAG,QAAQ,CAAC;AAEvB,QAAA,iBAAiB,GAAoB;IAC9C,+BAA+B;IAC/B,aAAa,EAAE,IAAI;IACnB,uCAAuC;IACvC,WAAW,EAAE,IAAI;IACjB,wEAAwE;IACxE,eAAe,EAAE,IAAI;IACrB,2EAA2E;IAC3E,4BAA4B;IAC5B,0BAA0B,EAAE,KAAK;IACjC,kDAAkD;IAClD,6CAA6C;IAC7C,uDAAuD;IACvD,0BAA0B;IAC1B,MAAM,EAAE,yBAAY,CAAC,GAAG;IACxB,qIAAqI;IACrI,kBAAkB,EAAE,IAAI;IACxB,GAAG,EAAE,CAAC,OAAO,mBAAW,OAAO,CAAC;CACnC,CAAC;AAEW,QAAA,4BAA4B,GAAoB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,yBAAiB,EAAE;IAC9F,sCAAsC;IACtC,mBAAmB,EAAE,IAAI;IACzB,eAAe;IACf,aAAa,EAAE,KAAK;IACpB,aAAa,EAAE,KAAK;IACpB,MAAM,EAAE,KAAK;CAChB,CAAC,CAAC","sourcesContent":["import { type CompilerOptions, ScriptTarget } from 'typescript';\n\n// Node.js 18+ supports the features of ES2022\n// consider changing this, so we get to support the newest features too\nexport const targetTsLib = 'es2022';\n\nexport const tsCompilerOptions: CompilerOptions = {\n    // don't compile faulty scripts\n    noEmitOnError: true,\n    // emit declarations for global scripts\n    declaration: true,\n    // This enables TS users to `import * as ... from` and `import ... from`\n    esModuleInterop: true,\n    // This flag was introduced in TS 4.4 and may break a lot of legacy scripts\n    // Better keep it turned off\n    useUnknownInCatchVariables: false,\n    // In order to run scripts as a Node.js vm.Script,\n    // we MUST target ES5, otherwise the compiled\n    // scripts may include `import` keywords, which are not\n    // supported by vm.Script.\n    target: ScriptTarget.ES5,\n    // This is required for QueryResults to be iterable (https://github.com/ioBroker/ioBroker.javascript/pull/663#issuecomment-721645705)\n    downlevelIteration: true,\n    lib: [`lib.${targetTsLib}.d.ts`],\n};\n\nexport const jsDeclarationCompilerOptions: CompilerOptions = Object.assign({}, tsCompilerOptions, {\n    // we only care about the declarations\n    emitDeclarationOnly: true,\n    // allow errors\n    noEmitOnError: false,\n    noImplicitAny: false,\n    strict: false,\n});\n"]}