{"version":3,"file":"static/js/vendors-node_modules_mui_material_styles_ThemeProvider_js.a5c18e58.chunk.js","mappings":"m3BAMe,SAASA,EAAoB,EAGzC,CAHyC,QAC1C,OAAOC,C,EADmC,EAEvCC,EAAA,GAFuC,EAEvC,CADH,UAGA,MAAMC,EAAc,OAAYF,EAAaA,EAAW,GAAQ,EAAI,OACpE,SAAoB,OAAK,IAAqB,OACzCC,GADyC,CAE5C,QAASC,EAAc,IAAW,OAClC,MAAOA,GAAeF,CACxB,EAAC,CACH,C,eCTe,SAAS,EAAc,EAGnC,CAHmC,QACpC,OAAAG,C,EADoC,EAEjCF,EAAA,GAFiC,EAEjC,CADH,UAGA,OAAI,OAAOE,GAAU,cACC,OAAKJ,EAAqB,GAC5C,MAAOI,GACJF,EACJ,EAGG,iBADW,OAAYE,EAAQA,EAAM,GAAQ,EAAIA,MAOnC,OAAK,KAAiB,GACxC,MAAOA,GACJF,EACJ,KARqB,OAAKF,EAAqB,GAC5C,MAAOI,GACJF,EACJ,CAML,C,mJCvBO,MAAMG,EAA2B,OAC3BC,EAAmC,eACnCC,EAAoB,oBAClB,SAASC,EAAsBC,EAAS,CACrD,KAAM,CACJ,wBAAAC,EAA0B,QAC1B,uBAAAC,EAAyB,OACzB,eAAAC,EAAiBP,EACjB,sBAAAQ,EAAwBP,EACxB,UAAWQ,EAAmBP,EAC9B,gBAAAQ,EAAkB,2BAClB,MAAAC,CACF,EAAIP,GAAW,CAAC,EAChB,IAAIQ,EAAS,GACTC,EAAYJ,EAOhB,GANIA,IAAqB,UACvBI,EAAY,OAEVJ,IAAqB,SACvBI,EAAY,aAEVA,EAAU,WAAW,GAAG,EAAG,CAC7B,MAAMC,EAAWD,EAAU,UAAU,CAAC,EACtCD,GAAU,GAAGF,CAAe,sBAAsBI,CAAQ,4BAA4BA,CAAQ;AAAA,QAC1FJ,CAAe,mBAAmBI,CAAQ,gCAChD,CACA,MAAMC,EAAUF,EAAU,MAAM,cAAc,EAC9C,GAAIE,EAAS,CACX,KAAM,CAACC,EAAMC,CAAK,EAAIF,EAAQ,CAAC,EAAE,MAAM,GAAG,EACrCE,IACHL,GAAU,GAAGF,CAAe,qBAAqBM,CAAI;AAAA,QACnDN,CAAe,qBAAqBM,CAAI,2BAE5CJ,GAAU;AAAA,QACNF,CAAe,kBAAkBM,CAAI,iCAAiCC,EAAQ,GAAGA,CAAK,8BAAgC,IAAI,IAChI,MACEL,GAAU,GAAGF,CAAe,kBAAkBG,CAAS,mBAEzD,SAAoB,OAAK,SAAU,CACjC,yBAA0B,GAC1B,MAAO,OAAO,QAAW,YAAcF,EAAQ,GAG/C,wBAAyB,CACvB,OAAQ;AAAA;AAAA;AAAA,uCAGyBJ,CAAc;AAAA,uCACdC,CAAqB,eAAeF,CAAsB;AAAA,wCACzDE,CAAqB,gBAAgBH,CAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiB9FO,CAAM;AAAA;AAAA,kBAGR,CACF,EAAG,uBAAuB,CAC5B,CCxEO,SAASM,EAAcC,EAAM,CAClC,GAAI,OAAO,QAAW,aAAe,OAAO,OAAO,YAAe,YAAcA,IAAS,SAEvF,OADY,OAAO,WAAW,8BAA8B,EACpD,QACC,OAEF,OAGX,CACA,SAASC,EAAaC,EAAOC,EAAU,CACrC,GAAID,EAAM,OAAS,SAAWA,EAAM,OAAS,UAAYA,EAAM,aAAe,QAC5E,OAAOC,EAAS,OAAO,EAEzB,GAAID,EAAM,OAAS,QAAUA,EAAM,OAAS,UAAYA,EAAM,aAAe,OAC3E,OAAOC,EAAS,MAAM,CAG1B,CACO,SAASC,GAAeF,EAAO,CACpC,OAAOD,EAAaC,EAAOF,GAAQ,CACjC,GAAIA,IAAS,QACX,OAAOE,EAAM,iBAEf,GAAIF,IAAS,OACX,OAAOE,EAAM,eAGjB,CAAC,CACH,CACA,SAASG,EAAgBC,EAAKC,EAAc,CAC1C,GAAI,OAAO,QAAW,YACpB,OAEF,IAAIT,EACJ,GAAI,CACFA,EAAQ,aAAa,QAAQQ,CAAG,GAAK,OAChCR,GAEH,aAAa,QAAQQ,EAAKC,CAAY,CAE1C,OAASC,EAAG,CAEZ,CACA,OAAOV,GAASS,CAClB,CACe,SAASE,GAAsBxB,EAAS,CACrD,KAAM,CACJ,YAAAyB,EAAc,QACd,wBAAAxB,EACA,uBAAAC,EACA,sBAAAwB,EAAwB,CAAC,EACzB,eAAAvB,EAAiBP,EACjB,sBAAAQ,EAAwBP,EACxB,cAAA8B,EAAgB,OAAO,QAAW,YAAc,OAAY,MAC9D,EAAI3B,EACE4B,EAAqBF,EAAsB,KAAK,GAAG,EACnDG,EAAiBH,EAAsB,OAAS,EAChD,CAACT,EAAOa,CAAQ,EAAI,WAAe,IAAM,CAC7C,MAAMC,EAAcX,EAAgBjB,EAAgBsB,CAAW,EACzDO,EAAmBZ,EAAgB,GAAGhB,CAAqB,SAAUH,CAAuB,EAC5FgC,EAAkBb,EAAgB,GAAGhB,CAAqB,QAASF,CAAsB,EAC/F,MAAO,CACL,KAAM6B,EACN,WAAYjB,EAAciB,CAAW,EACrC,iBAAAC,EACA,gBAAAC,CACF,CACF,CAAC,EAEK,CAAC,CAAEC,CAAa,EAAI,WAAe,EAAK,EACxCC,EAAa,SAAa,EAAK,EACrC,YAAgB,IAAM,CAChBN,GACFK,EAAc,EAAI,EAEpBC,EAAW,QAAU,EACvB,EAAG,CAACN,CAAc,CAAC,EACnB,MAAMO,GAAcjB,GAAeF,CAAK,EAClCoB,EAAU,cAAkBtB,GAAQ,CACxCe,EAASQ,GAAgB,CACvB,GAAIvB,IAASuB,EAAa,KAExB,OAAOA,EAET,MAAMC,EAAUxB,GAAA,KAAAA,EAAQU,EACxB,GAAI,CACF,aAAa,QAAQtB,EAAgBoC,CAAO,CAC9C,OAAShB,EAAG,CAEZ,CACA,OAAO,OACFe,GADE,CAEL,KAAMC,EACN,WAAYzB,EAAcyB,CAAO,CACnC,EACF,CAAC,CACH,EAAG,CAACpC,EAAgBsB,CAAW,CAAC,EAC1Be,EAAiB,cAAkB3B,GAAS,CAC3CA,EAcM,OAAOA,GAAU,SACtBA,GAAS,CAACe,EAAmB,SAASf,CAAK,EAC7C,QAAQ,MAAM,KAAKA,CAAK,8CAA8C,EAEtEiB,EAASQ,GAAgB,CACvB,MAAMG,EAAW,KACZH,GAEL,OAAAtB,EAAasB,EAAcvB,GAAQ,CACjC,GAAI,CACF,aAAa,QAAQ,GAAGX,CAAqB,IAAIW,CAAI,GAAIF,CAAK,CAChE,OAASU,EAAG,CAEZ,CACIR,IAAS,UACX0B,EAAS,iBAAmB5B,GAE1BE,IAAS,SACX0B,EAAS,gBAAkB5B,EAE/B,CAAC,EACM4B,CACT,CAAC,EAGHX,EAASQ,GAAgB,CACvB,MAAMG,EAAW,KACZH,GAECI,EAAsB7B,EAAM,QAAU,KAAOZ,EAA0BY,EAAM,MAC7E8B,EAAqB9B,EAAM,OAAS,KAAOX,EAAyBW,EAAM,KAChF,GAAI6B,EACF,GAAI,CAACd,EAAmB,SAASc,CAAmB,EAClD,QAAQ,MAAM,KAAKA,CAAmB,8CAA8C,MAC/E,CACLD,EAAS,iBAAmBC,EAC5B,GAAI,CACF,aAAa,QAAQ,GAAGtC,CAAqB,SAAUsC,CAAmB,CAC5E,OAASE,GAAO,CAEhB,CACF,CAEF,GAAID,EACF,GAAI,CAACf,EAAmB,SAASe,CAAkB,EACjD,QAAQ,MAAM,KAAKA,CAAkB,8CAA8C,MAC9E,CACLF,EAAS,gBAAkBE,EAC3B,GAAI,CACF,aAAa,QAAQ,GAAGvC,CAAqB,QAASuC,CAAkB,CAC1E,OAASC,GAAO,CAEhB,CACF,CAEF,OAAOH,CACT,CAAC,EArEDX,EAASQ,GAAgB,CACvB,GAAI,CACF,aAAa,QAAQ,GAAGlC,CAAqB,SAAUH,CAAuB,EAC9E,aAAa,QAAQ,GAAGG,CAAqB,QAASF,CAAsB,CAC9E,OAASqB,EAAG,CAEZ,CACA,OAAO,OACFe,GADE,CAEL,iBAAkBrC,EAClB,gBAAiBC,CACnB,EACF,CAAC,CA2DL,EAAG,CAAC0B,EAAoBxB,EAAuBH,EAAyBC,CAAsB,CAAC,EACzF2C,EAAmB,cAAkBC,GAAS,CAC9C7B,EAAM,OAAS,UACjBa,EAASQ,GAAgB,CACvB,MAAMS,EAAaD,GAAA,MAAAA,EAAO,QAAU,OAAS,QAG7C,OAAIR,EAAa,aAAeS,EACvBT,EAEF,OACFA,GADE,CAEL,WAAAS,CACF,EACF,CAAC,CAEL,EAAG,CAAC9B,EAAM,IAAI,CAAC,EAGT+B,GAAgB,SAAaH,CAAgB,EACnD,OAAAG,GAAc,QAAUH,EACxB,YAAgB,IAAM,CACpB,GAAI,OAAO,OAAO,YAAe,YAAc,CAAChB,EAC9C,OAEF,MAAMoB,EAAU,IAAIC,IAASF,GAAc,QAAQ,GAAGE,CAAI,EAGpDC,EAAQ,OAAO,WAAW,8BAA8B,EAG9D,OAAAA,EAAM,YAAYF,CAAO,EACzBA,EAAQE,CAAK,EACN,IAAM,CACXA,EAAM,eAAeF,CAAO,CAC9B,CACF,EAAG,CAACpB,CAAc,CAAC,EAGnB,YAAgB,IAAM,CACpB,GAAIF,GAAiBE,EAAgB,CACnC,MAAMuB,EAAgBN,GAAS,CAC7B,MAAMjC,EAAQiC,EAAM,SAChB,OAAOA,EAAM,KAAQ,UAAYA,EAAM,IAAI,WAAW1C,CAAqB,IAAM,CAACS,GAASe,EAAmB,MAAMf,CAAK,KAEvHiC,EAAM,IAAI,SAAS,OAAO,GAC5BN,EAAe,CACb,MAAO3B,CACT,CAAC,EAECiC,EAAM,IAAI,SAAS,MAAM,GAC3BN,EAAe,CACb,KAAM3B,CACR,CAAC,GAGDiC,EAAM,MAAQ3C,IAAmB,CAACU,GAAS,CAAC,QAAS,OAAQ,QAAQ,EAAE,SAASA,CAAK,IACvFwB,EAAQxB,GAASY,CAAW,CAEhC,EAEA,OAAAE,EAAc,iBAAiB,UAAWyB,CAAa,EAChD,IAAM,CACXzB,EAAc,oBAAoB,UAAWyB,CAAa,CAC5D,CACF,CAEF,EAAG,CAACZ,EAAgBH,EAASlC,EAAgBC,EAAuBwB,EAAoBH,EAAaE,EAAeE,CAAc,CAAC,EAC5H,OACFZ,GADE,CAEL,KAAMkB,EAAW,SAAW,CAACN,EAAiBZ,EAAM,KAAO,OAC3D,WAAYkB,EAAW,SAAW,CAACN,EAAiBZ,EAAM,WAAa,OACvE,YAAakB,EAAW,SAAW,CAACN,EAAiBO,GAAc,OACnE,QAAAC,EACA,eAAAG,CACF,EACF,CCnPO,MAAMa,GAAyB,2JACvB,SAASC,GAAsBtD,EAAS,CACrD,KAAM,CACJ,QAAAuD,EAOA,MAAOC,EAAe,CAAC,EACvB,eAAgBC,EAAwB7D,EACxC,sBAAuB8D,EAA+B7D,EACtD,0BAA2B8D,EAAiC,GAC5D,mBAAAC,EACA,aAAAC,CACF,EAAI7D,EACE8D,EAAiB,CACrB,gBAAiB,CAAC,EAClB,YAAa,OACb,gBAAiB,OACjB,iBAAkB,OAClB,KAAM,OACN,eAAgB,IAAM,CAAC,EACvB,QAAS,IAAM,CAAC,EAChB,WAAY,MACd,EACMC,EAAkC,gBAAoB,MAAS,EAI/DC,EAAiB,IAAM,aAAiBD,CAAkB,GAAKD,EACrE,SAASG,EAAgBxE,EAAO,C,mBAC9B,KAAM,CACJ,SAAAyE,EACA,MAAOC,EACP,eAAAhE,GAAiBsD,EACjB,sBAAArD,EAAwBsD,EACxB,0BAAAU,EAA4BT,EAC5B,cAAAhC,EAAgB,OAAO,QAAW,YAAc,OAAY,OAC5D,aAAA0C,EAAe,OAAO,UAAa,YAAc,OAAY,SAC7D,gBAAA/D,EAAkB,OAAO,UAAa,YAAc,OAAY,SAAS,gBACzE,qBAAAgE,GAAuB,GACvB,4BAAAC,GAA8B,EAChC,EAAI9E,EACE0C,GAAa,SAAa,EAAK,EAC/BqC,MAAa,KAAY,EACzBC,GAAM,aAAiBV,CAAkB,EACzCW,GAAS,CAAC,CAACD,IAAO,CAACH,GACnBK,GAAe,UAAc,IAC7BR,IAGG,OAAOX,GAAiB,WAAaA,EAAa,EAAIA,GAC5D,CAACW,CAAS,CAAC,EACRzE,GAAciF,GAAapB,CAAO,EAMpC,GAAA7D,IAAeiF,GAJjB,cAAAC,EAAe,CAAC,EAChB,WAAAC,GAAa,CAAC,EACd,aAAAC,E,EAEE,GADCC,EAAA,GACD,GADC,CAHH,eACA,aACA,iBAGInD,GAAqB,OAAO,KAAKgD,CAAY,EAAE,OAAOI,GAAK,CAAC,CAACJ,EAAaI,CAAC,CAAC,EAAE,KAAK,GAAG,EACtFC,GAAkB,UAAc,IAAMrD,GAAmB,MAAM,GAAG,EAAG,CAACA,EAAkB,CAAC,EACzF3B,GAA0B,OAAO2D,GAAuB,SAAWA,EAAqBA,EAAmB,MAC3G1D,GAAyB,OAAO0D,GAAuB,SAAWA,EAAqBA,EAAmB,KAC1GnC,GAAcmD,EAAa3E,EAAuB,GAAK2E,EAAa1E,EAAsB,EAAI,WAAW,OAAA0E,EAAaG,EAAc,kBAAkB,IAA7C,eAAgD,UAAhD,eAAyD,SAAQ,GAAAA,EAAc,UAAd,eAAuB,MAGjM,CACJ,KAAMG,GACN,QAAA7C,GACA,WAAAU,GACA,iBAAAf,GACA,gBAAAC,GACA,YAAakD,GACb,eAAA3C,EACF,EAAIhB,GAAsB,CACxB,sBAAuByD,GACvB,wBAAAhF,GACA,uBAAAC,GACA,eAAAC,GACA,sBAAAC,EACA,YAAAqB,GACA,cAAAE,CACF,CAAC,EACD,IAAIZ,GAAOmE,GACP9C,EAAc+C,GACdT,KACF3D,GAAO0D,GAAI,KACXrC,EAAcqC,GAAI,aAIpB,MAAMW,GAAwBhD,GAAe2C,EAAc,mBAGrDM,KAAY,GAAAN,EAAc,oBAAd,oBAAAA,KAAuCA,EAAc,KAGjEpF,EAAQ,OACToF,GADS,CAEZ,WAAAF,GACA,aAAAD,EACA,aAAAE,GACA,KAAMO,EACR,GAMA,GALI,OAAO1F,EAAM,iBAAoB,aACnCA,EAAM,QAAUA,EAAM,gBAAgB,GAIpCyF,GAAuB,CACzB,MAAME,EAASV,EAAaQ,EAAqB,EAC7CE,GAAU,OAAOA,GAAW,UAE9B,OAAO,KAAKA,CAAM,EAAE,QAAQC,GAAa,CACnCD,EAAOC,CAAS,GAAK,OAAOD,EAAOC,CAAS,GAAM,SAEpD5F,EAAM4F,CAAS,EAAI,OACd5F,EAAM4F,CAAS,GACfD,EAAOC,CAAS,GAGrB5F,EAAM4F,CAAS,EAAID,EAAOC,CAAS,CAEvC,CAAC,CAEL,CAIA,MAAMC,GAAsBT,EAAc,oBAC1C,YAAgB,IAAM,CACpB,GAAI3C,GAAe9B,GAAmBkF,IAAuBA,KAAwB,QAAS,CAC5F,MAAM9E,EAAW8E,GACjB,IAAIC,EAAOD,GAWX,GAVI9E,IAAa,UACf+E,EAAO,OAEL/E,IAAa,SACf+E,EAAO,aAEL/E,GAAA,MAAAA,EAAU,WAAW,UAAY,CAACA,EAAS,SAAS,IAAI,IAE1D+E,EAAO,IAAI/E,CAAQ,UAEjB+E,EAAK,WAAW,GAAG,EACrBnF,EAAgB,UAAU,OAAO,GAAG2E,GAAgB,IAAIK,IAAUG,EAAK,UAAU,CAAC,EAAE,QAAQ,KAAMH,EAAM,CAAC,CAAC,EAC1GhF,EAAgB,UAAU,IAAImF,EAAK,UAAU,CAAC,EAAE,QAAQ,KAAMrD,CAAW,CAAC,MACrE,CACL,MAAMzB,GAAU8E,EAAK,QAAQ,KAAMrD,CAAW,EAAE,MAAM,cAAc,EACpE,GAAIzB,GAAS,CACX,KAAM,CAACC,GAAMC,EAAK,EAAIF,GAAQ,CAAC,EAAE,MAAM,GAAG,EACrCE,IAGHoE,GAAgB,QAAQK,IAAU,CAChChF,EAAgB,gBAAgBM,GAAK,QAAQwB,EAAakD,EAAM,CAAC,CACnE,CAAC,EAEHhF,EAAgB,aAAaM,GAAMC,GAAQA,GAAM,QAAQ,OAAQ,EAAE,EAAI,EAAE,CAC3E,MACEP,EAAgB,aAAamF,EAAMrD,CAAW,CAElD,CACF,CACF,EAAG,CAACA,EAAaoD,GAAqBlF,EAAiB2E,EAAe,CAAC,EAIvE,YAAgB,IAAM,CACpB,IAAIS,EACJ,GAAItB,GAA6BjC,GAAW,SAAWkC,EAAc,CACnE,MAAMsB,EAAMtB,EAAa,cAAc,OAAO,EAC9CsB,EAAI,YAAYtB,EAAa,eAAehB,EAAsB,CAAC,EACnEgB,EAAa,KAAK,YAAYsB,CAAG,EAG1B,OAAO,iBAAiBtB,EAAa,IAAI,EAChDqB,EAAQ,WAAW,IAAM,CACvBrB,EAAa,KAAK,YAAYsB,CAAG,CACnC,EAAG,CAAC,CACN,CACA,MAAO,IAAM,CACX,aAAaD,CAAK,CACpB,CACF,EAAG,CAACtD,EAAagC,EAA2BC,CAAY,CAAC,EACzD,YAAgB,KACdlC,GAAW,QAAU,GACd,IAAM,CACXA,GAAW,QAAU,EACvB,GACC,CAAC,CAAC,EACL,MAAMyD,GAAe,UAAc,KAAO,CACxC,gBAAAX,GACA,YAAA7C,EACA,gBAAAH,GACA,iBAAAD,GACA,KAAAjB,GACA,eAAAyB,GACA,QAAAH,GACA,WAAAU,EACF,GAAI,CAACkC,GAAiB7C,EAAaH,GAAiBD,GAAkBjB,GAAMyB,GAAgBH,GAASU,EAAU,CAAC,EAChH,IAAI8C,GAA2B,IAC3BtB,IAA+BQ,EAAc,eAAiB,IAASL,KAAUF,IAAA,YAAAA,GAAY,gBAAiBM,MAChHe,GAA2B,IAE7B,MAAMC,MAAuB,QAAM,WAAgB,CACjD,SAAU,CAACD,OAAyC,OAAK,WAAgB,CACvE,YAAW,GAAAlG,EAAM,sBAAN,oBAAAA,KAAiC,CAAC,GAAG,IAAI,CAACoG,EAAQC,OAAuB,OAAKC,EAAA,EAAc,CACrG,OAAQF,CACV,EAAGC,CAAK,CAAC,CACX,CAAC,KAAgB,OAAKE,EAAA,EAAe,CACnC,QAASxG,GAAc6D,EAAU,OACjC,MAAOM,EAAeA,EAAalE,CAAK,EAAIA,EAC5C,SAAUuE,CACZ,CAAC,CAAC,CACJ,CAAC,EACD,OAAIQ,GACKoB,MAEW,OAAK/B,EAAmB,SAAU,CACpD,MAAO6B,GACP,SAAUE,EACZ,CAAC,CACH,CA8CA,MAAM7F,EAA0B,OAAO2D,GAAuB,SAAWA,EAAqBA,EAAmB,MAC3G1D,EAAyB,OAAO0D,GAAuB,SAAWA,EAAqBA,EAAmB,KAQhH,MAAO,CACL,gBAAAK,EACA,eAAAD,EACA,yBAV+BmC,GAAUpG,EAAsB,GAC/D,sBAAuB2D,EACvB,wBAAAzD,EACA,uBAAAC,EACA,eAAgBuD,GACb0C,EACJ,CAKD,CACF,C,qCCnSO,MAAMC,EAAgB,CAC3B,UAAW,wBACX,sBAAuB,mBACvB,wBAAyB,QACzB,uBAAwB,OACxB,eAAgB,UAClB,EACA,EAAgB,SAA+B3G,EAAO,CACpD,OAAoB,KAAK,4BAA6B,OACjD2G,GACA3G,EACJ,CACH,ECLM,CACJ,gBAAiB4G,EACjB,eAAArC,EACA,yBAA0BsC,EAC5B,EAAIhD,GAAsB,CACxB,QAAS,IAET,MAAO,OAAMiD,EAAA,GAAY,CACvB,aAAc,EAChB,CAAC,EACD,sBAAuBH,EAAc,sBACrC,eAAgBA,EAAc,eAC9B,mBAAoB,CAClB,MAAOA,EAAc,wBACrB,KAAMA,EAAc,sBACtB,EACA,aAAczG,GAAS,CACrB,MAAM6G,EAAW,OACZ7G,GADY,CAEf,cAAY8G,EAAA,GAAiB9G,EAAM,QAASA,EAAM,UAAU,CAC9D,GACA,OAAA6G,EAAS,YAAc,SAAY/G,EAAO,CACxC,SAAOiH,EAAA,GAAgB,CACrB,GAAIjH,EACJ,MAAO,IACT,CAAC,CACH,EACO+G,CACT,CACF,CAAC,EACD,IAAIG,GAAa,GAIjB,SAASC,GAA6BnH,EAAO,CAC3C,OAAKkH,KACH,QAAQ,KAAK,CAAC,sFAAuF,GAAI,iFAAkF,kGAAkG,EAAE,KAAK;AAAA,CAAI,CAAC,EACzSA,GAAa,OAEK,OAAKN,EAAyB,KAC7C5G,EACJ,CACH,CACA,IAAIoH,GAAuB,GAG3B,MAAMC,GAA2BX,IAC1BU,KACH,QAAQ,KAAK,CAAC,kEAAmE,GAAI,2FAA4F,yEAAyE,EAAE,KAAK;AAAA,CAAI,CAAC,EACtQA,GAAuB,IAElBP,GAAmCH,CAAM,GA0BrClC,GAAkBoC,C,2DClF/B,QAJkC,gBAAoB,IAAI,C,sECC3C,SAASU,GAAW,CAOjC,OANc,aAAiB,GAAY,CAO7C,C,kGCPA,MAAMC,EAA0B,gBAAoB,EACpD,SAASC,EAAY,EAGlB,CAHkB,QACnB,OAAApG,C,EADmB,EAEhBpB,EAAA,GAFgB,EAEhB,CADH,UAGA,SAAoB,OAAKuH,EAAW,SAAU,GAC5C,MAAOnG,GAAA,KAAAA,EAAS,IACbpB,EACJ,CACH,CAKO,MAAMyH,EAAS,IAAM,CAC1B,MAAMrG,EAAQ,aAAiBmG,CAAU,EACzC,OAAOnG,GAAA,KAAAA,EAAS,EAClB,EACA,EAAeoG,C,oFCpBf,QADkB,OAAO,QAAW,YAAc,OAAO,IAC9B,OAAO,IAAI,YAAY,EAAI,mB,eCQtD,SAASE,EAAqBC,EAAYC,EAAY,CACpD,OAAI,OAAOA,GAAe,WACJA,EAAWD,CAAU,EAQpC,OACFA,GACAC,EAEP,CAOA,SAASnB,EAAczG,EAAO,CAC5B,KAAM,CACJ,SAAAyE,EACA,MAAOmD,CACT,EAAI5H,EACE2H,KAAaL,EAAA,GAAS,EAMtBpH,EAAQ,UAAc,IAAM,CAChC,MAAM2H,EAASF,IAAe,KAAO,KAChCC,GACDF,EAAqBC,EAAYC,CAAU,EAC/C,OAAIC,GAAU,OACZA,EAAO5C,CAAM,EAAI0C,IAAe,MAE3BE,CACT,EAAG,CAACD,EAAYD,CAAU,CAAC,EAC3B,SAAoB,OAAKG,EAAA,EAAa,SAAU,CAC9C,MAAO5H,EACP,SAAUuE,CACZ,CAAC,CACH,CAcA,QAAegC,E,gDCzDf,MAAMsB,EAAc,CAAC,EACrB,SAASC,GAAgBlE,EAASiB,EAAY6C,EAAYK,EAAY,GAAO,CAC3E,OAAO,UAAc,IAAM,CACzB,MAAMC,EAAgBpE,GAAUiB,EAAWjB,CAAO,GAAKiB,EACvD,GAAI,OAAO6C,GAAe,WAAY,CACpC,MAAMO,EAAcP,EAAWM,CAAa,EACtCE,EAAStE,EAAU,OACpBiB,GADoB,CAEvB,CAACjB,CAAO,EAAGqE,CACb,GAAIA,EAGJ,OAAIF,EACK,IAAMG,EAERA,CACT,CACA,OAAOtE,EAAU,OACZiB,GADY,CAEf,CAACjB,CAAO,EAAG8D,CACb,GAAI,OACC7C,GACA6C,EAEP,EAAG,CAAC9D,EAASiB,EAAY6C,EAAYK,CAAS,CAAC,CACjD,CASA,SAAS,GAAcjI,EAAO,CAC5B,KAAM,CACJ,SAAAyE,EACA,MAAOmD,EACP,QAAA9D,CACF,EAAI9D,EACE+E,KAAasD,EAAA,GAAuBN,CAAW,EAC/CO,KAAoB,KAAgB,GAAKP,EAMzCQ,EAAcP,GAAgBlE,EAASiB,EAAY6C,CAAU,EAC7DY,GAAeR,GAAgBlE,EAASwE,EAAmBV,EAAY,EAAI,EAC3Ea,GAAWF,EAAY,YAAc,MAC3C,SAAoB,OAAK,EAAkB,CACzC,MAAOC,GACP,YAAuB,OAAK,IAAyB,SAAU,CAC7D,MAAOD,EACP,YAAuB,OAAKf,EAAA,EAAa,CACvC,MAAOiB,GACP,YAAuB,OAAKC,GAAA,EAAsB,CAChD,MAAOH,GAAA,YAAAA,EAAa,WACpB,SAAU9D,CACZ,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAsBA,SAAe,E","sources":["../node_modules/@mui/material/styles/ThemeProviderNoVars.js","../node_modules/@mui/material/styles/ThemeProvider.js","../node_modules/@mui/system/InitColorSchemeScript/InitColorSchemeScript.js","../node_modules/@mui/system/cssVars/useCurrentColorScheme.js","../node_modules/@mui/system/cssVars/createCssVarsProvider.js","../node_modules/@mui/material/InitColorSchemeScript/InitColorSchemeScript.js","../node_modules/@mui/material/styles/ThemeProviderWithVars.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/system/RtlProvider/index.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/ThemeProvider/ThemeProvider.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProviderNoVars({\n  theme: themeInput,\n  ...props\n}) {\n  const scopedTheme = THEME_ID in themeInput ? themeInput[THEME_ID] : undefined;\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\n    ...props,\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport ThemeProviderNoVars from \"./ThemeProviderNoVars.js\";\nimport { CssVarsProvider } from \"./ThemeProviderWithVars.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider({\n  theme,\n  ...props\n}) {\n  if (typeof theme === 'function') {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  const muiTheme = THEME_ID in theme ? theme[THEME_ID] : theme;\n  if (!('colorSchemes' in muiTheme)) {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  return /*#__PURE__*/_jsx(CssVarsProvider, {\n    theme: theme,\n    ...props\n  });\n}","/**\n * Split this component for RSC import\n */\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function InitColorSchemeScript(options) {\n  const {\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute: initialAttribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement',\n    nonce\n  } = options || {};\n  let setter = '';\n  let attribute = initialAttribute;\n  if (initialAttribute === 'class') {\n    attribute = '.%s';\n  }\n  if (initialAttribute === 'data') {\n    attribute = '[data-%s]';\n  }\n  if (attribute.startsWith('.')) {\n    const selector = attribute.substring(1);\n    setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;\n  }\n  const matches = attribute.match(/\\[([^\\]]+)\\]/); // case [data-color-scheme=%s] or [data-color-scheme]\n  if (matches) {\n    const [attr, value] = matches[1].split('=');\n    if (!value) {\n      setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;\n    }\n    setter += `\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '\"\"'});`;\n  } else {\n    setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;\n  }\n  return /*#__PURE__*/_jsx(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: typeof window === 'undefined' ? nonce : ''\n    // eslint-disable-next-line react/no-danger\n    ,\n    dangerouslySetInnerHTML: {\n      __html: `(function() {\ntry {\n  let colorScheme = '';\n  const mode = localStorage.getItem('${modeStorageKey}') || 'system';\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n  if (mode === 'system') {\n    // handle system mode\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = dark\n    } else {\n      colorScheme = light\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = light;\n  }\n  if (mode === 'dark') {\n    colorScheme = dark;\n  }\n  if (colorScheme) {\n    ${setter}\n  }\n} catch(e){}})();`\n    }\n  }, \"mui-color-scheme-init\");\n}","'use client';\n\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const isMultiSchemes = supportedColorSchemes.length > 1;\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  // This could be improved with `React.useSyncExternalStore` in the future.\n  const [, setHasMounted] = React.useState(false);\n  const hasMounted = React.useRef(false);\n  React.useEffect(() => {\n    if (isMultiSchemes) {\n      setHasMounted(true); // to rerender the component after hydration\n    }\n    hasMounted.current = true;\n  }, [isMultiSchemes]);\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode ?? defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return {\n        ...currentState,\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      };\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return {\n          ...currentState,\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        };\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = {\n            ...currentState\n          };\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = {\n          ...currentState\n        };\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event?.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return {\n          ...currentState,\n          systemMode\n        };\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    if (typeof window.matchMedia !== 'function' || !isMultiSchemes) {\n      return undefined;\n    }\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, [isMultiSchemes]);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow && isMultiSchemes) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow, isMultiSchemes]);\n  return {\n    ...state,\n    mode: hasMounted.current || !isMultiSchemes ? state.mode : undefined,\n    systemMode: hasMounted.current || !isMultiSchemes ? state.systemMode : undefined,\n    colorScheme: hasMounted.current || !isMultiSchemes ? colorScheme : undefined,\n    setMode,\n    setColorScheme\n  };\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport ThemeProvider from \"../ThemeProvider/index.js\";\nimport InitColorSchemeScript, { DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport useCurrentColorScheme from \"./useCurrentColorScheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    defaultColorScheme,\n    resolveTheme\n  } = options;\n  const defaultContext = {\n    allColorSchemes: [],\n    colorScheme: undefined,\n    darkColorScheme: undefined,\n    lightColorScheme: undefined,\n    mode: undefined,\n    setColorScheme: () => {},\n    setMode: () => {},\n    systemMode: undefined\n  };\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\n  }\n  const useColorScheme = () => React.useContext(ColorSchemeContext) || defaultContext;\n  function CssVarsProvider(props) {\n    const {\n      children,\n      theme: themeProp,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false\n    } = props;\n    const hasMounted = React.useRef(false);\n    const upperTheme = muiUseTheme();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const initialTheme = React.useMemo(() => {\n      if (themeProp) {\n        return themeProp;\n      }\n      return typeof defaultTheme === 'function' ? defaultTheme() : defaultTheme;\n    }, [themeProp]);\n    const scopedTheme = initialTheme[themeId];\n    const {\n      colorSchemes = {},\n      components = {},\n      cssVarPrefix,\n      ...restThemeProp\n    } = scopedTheme || initialTheme;\n    const joinedColorSchemes = Object.keys(colorSchemes).filter(k => !!colorSchemes[k]).join(',');\n    const allColorSchemes = React.useMemo(() => joinedColorSchemes.split(','), [joinedColorSchemes]);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const defaultMode = colorSchemes[defaultLightColorScheme] && colorSchemes[defaultDarkColorScheme] ? 'system' : colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode || restThemeProp.palette?.mode;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n\n    // `colorScheme` is undefined on the server and hydration phase\n    const calculatedColorScheme = colorScheme || restThemeProp.defaultColorScheme;\n\n    // 2. get the `vars` object that refers to the CSS custom properties\n    const themeVars = restThemeProp.generateThemeVars?.() || restThemeProp.vars;\n\n    // 3. Start composing the theme object\n    const theme = {\n      ...restThemeProp,\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: themeVars\n    };\n    if (typeof theme.generateSpacing === 'function') {\n      theme.spacing = theme.generateSpacing();\n    }\n\n    // 4. Resolve the color scheme and merge it to the theme\n    if (calculatedColorScheme) {\n      const scheme = colorSchemes[calculatedColorScheme];\n      if (scheme && typeof scheme === 'object') {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = {\n              ...theme[schemeKey],\n              ...scheme[schemeKey]\n            };\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n      }\n    }\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    const colorSchemeSelector = restThemeProp.colorSchemeSelector;\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode && colorSchemeSelector && colorSchemeSelector !== 'media') {\n        const selector = colorSchemeSelector;\n        let rule = colorSchemeSelector;\n        if (selector === 'class') {\n          rule = `.%s`;\n        }\n        if (selector === 'data') {\n          rule = `[data-%s]`;\n        }\n        if (selector?.startsWith('data-') && !selector.includes('%s')) {\n          // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\"%s\"]'\n          rule = `[${selector}=\"%s\"]`;\n        }\n        if (rule.startsWith('.')) {\n          colorSchemeNode.classList.remove(...allColorSchemes.map(scheme => rule.substring(1).replace('%s', scheme)));\n          colorSchemeNode.classList.add(rule.substring(1).replace('%s', colorScheme));\n        } else {\n          const matches = rule.replace('%s', colorScheme).match(/\\[([^\\]]+)\\]/);\n          if (matches) {\n            const [attr, value] = matches[1].split('=');\n            if (!value) {\n              // for attributes like `data-theme-dark`, `data-theme-light`\n              // remove all the existing data attributes before setting the new one\n              allColorSchemes.forEach(scheme => {\n                colorSchemeNode.removeAttribute(attr.replace(colorScheme, scheme));\n              });\n            }\n            colorSchemeNode.setAttribute(attr, value ? value.replace(/\"|'/g, '') : '');\n          } else {\n            colorSchemeNode.setAttribute(rule, colorScheme);\n          }\n        }\n      }\n    }, [colorScheme, colorSchemeSelector, colorSchemeNode, allColorSchemes]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      allColorSchemes,\n      colorScheme,\n      darkColorScheme,\n      lightColorScheme,\n      mode,\n      setColorScheme,\n      setMode,\n      systemMode\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || restThemeProp.cssVariables === false || nested && upperTheme?.cssVarPrefix === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/_jsx(React.Fragment, {\n        children: (theme.generateStyleSheets?.() || []).map((styles, index) => /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: styles\n        }, index))\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: PropTypes.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n  const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n  const getInitColorSchemeScript = params => InitColorSchemeScript({\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey,\n    ...params\n  });\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","import * as React from 'react';\nimport SystemInitColorSchemeScript from '@mui/system/InitColorSchemeScript';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const defaultConfig = {\n  attribute: 'data-mui-color-scheme',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultLightColorScheme: 'light',\n  defaultDarkColorScheme: 'dark',\n  modeStorageKey: 'mui-mode'\n};\nexport default (function InitColorSchemeScript(props) {\n  return /*#__PURE__*/_jsx(SystemInitColorSchemeScript, {\n    ...defaultConfig,\n    ...props\n  });\n});","'use client';\n\nimport * as React from 'react';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport createTheme from \"./createTheme.js\";\nimport createTypography from \"./createTypography.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { defaultConfig } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst {\n  CssVarsProvider: InternalCssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  // @ts-ignore ignore module augmentation tests\n  theme: () => createTheme({\n    cssVariables: true\n  }),\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n  modeStorageKey: defaultConfig.modeStorageKey,\n  defaultColorScheme: {\n    light: defaultConfig.defaultLightColorScheme,\n    dark: defaultConfig.defaultDarkColorScheme\n  },\n  resolveTheme: theme => {\n    const newTheme = {\n      ...theme,\n      typography: createTypography(theme.palette, theme.typography)\n    };\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  }\n});\nlet warnedOnce = false;\n\n// TODO: remove in v7\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction Experimental_CssVarsProvider(props) {\n  if (!warnedOnce) {\n    console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\n'));\n    warnedOnce = true;\n  }\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\n    ...props\n  });\n}\nlet warnedInitScriptOnce = false;\n\n// TODO: remove in v7\nconst getInitColorSchemeScript = params => {\n  if (!warnedInitScriptOnce) {\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\n'));\n    warnedInitScriptOnce = true;\n  }\n  return deprecatedGetInitColorSchemeScript(params);\n};\n\n/**\n * TODO: remove this export in v7\n * @deprecated\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\n *\n * You should use `ThemeProvider` and `createTheme` instead:\n *\n * ```diff\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\n *\n * - const theme = extendTheme();\n * + const theme = createTheme({\n * +   cssVariables: true,\n * +   colorSchemes: { light: true, dark: true },\n * + });\n *\n * - <CssVarsProvider theme={theme}>\n * + <ThemeProvider theme={theme}>\n * ```\n *\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\n */\nexport const CssVarsProvider = InternalCssVarsProvider;\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from \"./ThemeContext.js\";\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: uncomment once we enable eslint-plugin-react-compiler eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- It's not required to run React.useDebugValue in production\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RtlContext = /*#__PURE__*/React.createContext();\nfunction RtlProvider({\n  value,\n  ...props\n}) {\n  return /*#__PURE__*/_jsx(RtlContext.Provider, {\n    value: value ?? true,\n    ...props\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RtlProvider.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.bool\n} : void 0;\nexport const useRtl = () => {\n  const value = React.useContext(RtlContext);\n  return value ?? false;\n};\nexport default RtlProvider;","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from \"../useTheme/ThemeContext.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport nested from \"./nested.js\";\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return {\n    ...outerTheme,\n    ...localTheme\n  };\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? {\n      ...localTheme\n    } : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from \"../useThemeWithoutDefault/index.js\";\nimport RtlProvider from \"../RtlProvider/index.js\";\nimport DefaultPropsProvider from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? {\n        ...upperTheme,\n        [themeId]: mergedTheme\n      } : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? {\n      ...upperTheme,\n      [themeId]: localTheme\n    } : {\n      ...upperTheme,\n      ...localTheme\n    };\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = engineTheme.direction === 'rtl';\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: /*#__PURE__*/_jsx(DefaultPropsProvider, {\n          value: engineTheme?.components,\n          children: children\n        })\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;"],"names":["ThemeProviderNoVars","themeInput","props","scopedTheme","theme","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","InitColorSchemeScript","options","defaultLightColorScheme","defaultDarkColorScheme","modeStorageKey","colorSchemeStorageKey","initialAttribute","colorSchemeNode","nonce","setter","attribute","selector","matches","attr","value","getSystemMode","mode","processState","state","callback","getColorScheme","initializeValue","key","defaultValue","e","useCurrentColorScheme","defaultMode","supportedColorSchemes","storageWindow","joinedColorSchemes","isMultiSchemes","setState","initialMode","lightColorScheme","darkColorScheme","setHasMounted","hasMounted","colorScheme","setMode","currentState","newMode","setColorScheme","newState","newLightColorScheme","newDarkColorScheme","error","handleMediaQuery","event","systemMode","mediaListener","handler","args","media","handleStorage","DISABLE_CSS_TRANSITION","createCssVarsProvider","themeId","defaultTheme","defaultModeStorageKey","defaultColorSchemeStorageKey","designSystemTransitionOnChange","defaultColorScheme","resolveTheme","defaultContext","ColorSchemeContext","useColorScheme","CssVarsProvider","children","themeProp","disableTransitionOnChange","documentNode","disableNestedContext","disableStyleSheetGeneration","upperTheme","ctx","nested","initialTheme","colorSchemes","components","cssVarPrefix","restThemeProp","k","allColorSchemes","stateMode","stateColorScheme","calculatedColorScheme","themeVars","scheme","schemeKey","colorSchemeSelector","rule","timer","css","contextValue","shouldGenerateStyleSheet","element","styles","index","GlobalStyles","ThemeProvider","params","defaultConfig","InternalCssVarsProvider","deprecatedGetInitColorSchemeScript","createTheme","newTheme","createTypography","styleFunctionSx","warnedOnce","Experimental_CssVarsProvider","warnedInitScriptOnce","getInitColorSchemeScript","useTheme","RtlContext","RtlProvider","useRtl","mergeOuterLocalTheme","outerTheme","localTheme","output","ThemeContext","EMPTY_THEME","useThemeScoping","isPrivate","resolvedTheme","mergedTheme","result","useThemeWithoutDefault","upperPrivateTheme","engineTheme","privateTheme","rtlValue","DefaultPropsProvider"],"sourceRoot":""}