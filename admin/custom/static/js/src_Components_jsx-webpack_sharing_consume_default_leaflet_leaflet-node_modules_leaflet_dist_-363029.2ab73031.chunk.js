"use strict";(self.webpackChunkiobroker_admin_component_backitup=self.webpackChunkiobroker_admin_component_backitup||[]).push([["src_Components_jsx-webpack_sharing_consume_default_leaflet_leaflet-node_modules_leaflet_dist_-363029"],{35276:(X,C,l)=>{l.r(C),l.d(C,{default:()=>Z});var I=l(28437),t=l.n(I),M=l(95973),h=l.n(M),O=l(29439),v=l(28497),R=l(53821),i=l(67085),u=l(39128),n=l(75636),L=l(60556),D=l(90598),F=l(31976),P=l(20275),Y=l(12964),N=l(37024),j=l(91071),$=l(18249),H=Object.defineProperty,A=(a,e,s)=>e in a?H(a,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[e]=s,w=(a,e,s)=>A(a,typeof e!="symbol"?e+"":e,s);function B(a){const e=(0,P.ko)();return a.addMap&&a.addMap(e),null}class G extends I.Component{constructor(e){super(e),w(this,"onMap",s=>{if(!this.map||this.map!==s){this.map=s;const d=[parseFloat(this.state.latitude!==void 0?this.state.latitude:50)||0,parseFloat(this.state.longitude!==void 0?this.state.longitude:10)||0],o=window.L.icon({iconUrl:N,iconRetinaUrl:$,shadowUrl:j,iconSize:[25,41],iconAnchor:[12,41],popupAnchor:[1,-34],tooltipAnchor:[16,-28],shadowSize:[41,41]});this.marker=window.L.marker(d,{draggable:!0,title:"Resource location",alt:"Resource Location",riseOnHover:!0,icon:o}).addTo(s).bindPopup("Popup for any custom information.").on({dragend:p=>this.onMarkerDragend(p)})}}),w(this,"onMarkerDragend",s=>{if(this.props.readOnly){this.map.flyTo([this.state.latitude,this.state.longitude]),this.marker.setLatLng([this.state.latitude,this.state.longitude]);return}const d=JSON.parse(JSON.stringify(s.target._latlng));this.setState({latitude:d.lat,longitude:d.lng},()=>this.props.onChange(this.state.latitude,this.state.longitude))}),this.state={zoom:14,latitude:this.props.latitude,longitude:this.props.longitude,width:0,height:0},this.divRef=t().createRef(),this.marker=null}componentDidUpdate(){this.map&&this.marker&&(this.props.latitude!==this.state.latitude||this.props.longitude!==this.state.longitude)&&this.setState({latitude:this.props.latitude,longitude:this.props.longitude},()=>{this.latLongTimer&&clearTimeout(this.latLongTimer),this.latLongTimer=setTimeout(()=>{this.latLongTimer=null,this.map.flyTo([this.state.latitude,this.state.longitude]),this.marker.setLatLng([this.state.latitude,this.state.longitude])},500)}),this.divRef.current&&(this.state.width!==this.divRef.current.clientWidth||this.state.height!==this.divRef.current.clientHeight)&&setTimeout(()=>{this.setState({width:this.divRef.current.clientWidth,height:this.divRef.current.clientHeight})},100)}render(){const e=[parseFloat(this.props.latitude!==void 0?this.props.latitude:50)||0,parseFloat(this.props.longitude!==void 0?this.props.longitude:10)||0],{zoom:s}=this.state;return console.log(this.state.width,this.state.height),t().createElement("div",{style:{width:"100%",height:"100%",minHeight:350},ref:this.divRef},this.state.width&&this.state.height?t().createElement(D.W,{style:{width:"100%",height:"100%",minHeight:350,borderRadius:5},center:e,zoom:s,maxZoom:18,attributionControl:!1,zoomControl:!0,doubleClickZoom:!0,scrollWheelZoom:!0,dragging:!this.props.readOnly,animate:!0,easeLinearity:.35},t().createElement(F.e,{url:"https://{s}.tile.osm.org/{z}/{x}/{y}.png"}),t().createElement(B,{addMap:d=>this.onMap(d)})):null)}}const z=G,_={};var U=Object.getPrototypeOf,J=Reflect.get,W=(a,e,s)=>J(U(a),s,e),b=(a,e,s)=>new Promise((d,o)=>{var p=c=>{try{f(s.next(c))}catch(E){o(E)}},m=c=>{try{f(s.throw(c))}catch(E){o(E)}},f=c=>c.done?d(c.value):Promise.resolve(c.value).then(p,m);f((s=s.apply(a,e)).next())});const V={en:u.enUS,fr:u.fr,ru:u.ru,de:u.de,es:u.es,br:u.ptBR,nl:u.nl,it:u.it,pt:u.pt,pl:u.pl,uk:u.uk,"zh-cn":u.zhCN},T=["useSystemGPS","latitude","longitude","sunriseEvent","sunriseOffset","sunriseLimitStart","sunriseLimitEnd","sunsetEvent","sunsetOffset","sunsetLimitStart","sunsetLimitEnd"];function S(a){if(!a)return new Date;const e=a.split(":");return new Date(2e3,0,1,parseInt(e[0],10),parseInt(e[1],10))}function y(a){return a?`${a.getHours().toString().padStart(2,"0")}:${a.getMinutes().toString().padStart(2,"0")}`:""}function k(a){const e=a.getHours().toString().padStart(2,"0"),s=a.getMinutes().toString().padStart(2,"0"),d=a.getSeconds().toString().padStart(2,"0");return`${e}:${s}:${d}`}class x extends L.ConfigGeneric{constructor(e){super(e),Object.assign(this.state,{theme:(0,n.Theme)(this.props.themeName||"light")})}componentDidMount(){return b(this,null,function*(){W(x.prototype,this,"componentDidMount").call(this);const e={};T.forEach(s=>{e[s]=L.ConfigGeneric.getValue(this.props.data,s)}),e.sunsetOffset=e.sunsetOffset||0,e.sunriseOffset=e.sunriseOffset||0,e.sunriseLimitStart=S(e.sunriseLimitStart),e.sunriseLimitEnd=S(e.sunriseLimitEnd),e.sunsetLimitStart=S(e.sunsetLimitStart),e.sunsetLimitEnd=S(e.sunsetLimitEnd),e.useSystemGPS&&(e.latitude=this.props.systemConfig.latitude,e.longitude=this.props.systemConfig.longitude),e.ampm=this.props.systemConfig.dateFormat.includes("/"),this.setState(e,()=>this.onChange())})}renderMap(){return t().createElement(z,{longitude:this.state.longitude,latitude:this.state.latitude,readOnly:!!this.state.useSystemGPS,onChange:(e,s)=>this.setState({latitude:e,longitude:s})})}onChange(e,s){let d;typeof e=="object"?d=e:e!==void 0&&(d={[e]:s}),this.setState(d,()=>{const o={};T.forEach(m=>o[m]=this.state[m]),o.sunriseLimitStart=y(o.sunriseLimitStart),o.sunriseLimitEnd=y(o.sunriseLimitEnd),o.sunsetLimitStart=y(o.sunsetLimitStart),o.sunsetLimitEnd=y(o.sunsetLimitEnd),o.sunsetOffset=parseInt(o.sunsetOffset,10)||0,o.sunriseOffset=parseInt(o.sunriseOffset,10)||0,this.calculateRiseSet(o);const p=JSON.parse(JSON.stringify(this.props.data));T.forEach(m=>p[m]=o[m]),e!==void 0&&this.props.onChange(p)})}calculateRiseSet(e){this.props.alive&&this.lastCalc!==JSON.stringify(e)&&(this.lastCalc=JSON.stringify(e),this.calcTimeout&&clearTimeout(this.calcTimeout),this.calcTimeout=setTimeout(()=>b(this,null,function*(){this.calcTimeout=null;const s=yield this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`,"calcAstro",e);if(!s||s.error){console.error(`Cannot calculate astro times: ${JSON.stringify(s.error)}`);return}this.setState({nextSunrise:s.nextSunrise.isValidDate?k(new Date(s.nextSunrise.date)):"n/a",nextSunset:s.nextSunset.isValidDate?k(new Date(s.nextSunset.date)):"n/a",nextSunriseServer:s.nextSunrise.serverTime,nextSunsetServer:s.nextSunset.serverTime})}),300))}renderItem(){const{useSystemGPS:e,latitude:s,longitude:d,sunriseEvent:o,sunriseOffset:p,sunriseLimitStart:m,sunriseLimitEnd:f,sunsetEvent:c,sunsetOffset:E,sunsetLimitStart:K,sunsetLimitEnd:Q}=this.state,g=window.innerWidth<800;return t().createElement(R.A,{theme:this.state.theme},t().createElement("div",{style:{width:"100%",display:g?void 0:"flex",gap:10}},t().createElement("div",{style:{width:g?"100%":"calc(50% - 5px)",display:g?"block":"inline-block"}},t().createElement(v.LocalizationProvider,{dateAdapter:O.h,adapterLocale:V[n.I18n.getLanguage()]},t().createElement(i.FormControlLabel,{style:{width:"calc(100% - 10px)"},control:t().createElement(i.Checkbox,{checked:!!e,onChange:r=>{r.target.checked?this.onChange({useSystemGPS:!0,latitude:this.props.systemConfig.latitude,longitude:this.props.systemConfig.longitude}):this.onChange({useSystemGPS:!1,latitude:s||this.props.systemConfig.latitude,longitude:d||this.props.systemConfig.longitude})}}),label:n.I18n.t("Use system settings")}),e?null:t().createElement(i.TextField,{variant:"standard",type:"text",style:{width:150,marginRight:10},label:n.I18n.t("Latitude \xB0"),value:(s||"").toString(),onChange:r=>this.onChange("latitude",r.target.value)}),e?null:t().createElement(i.TextField,{variant:"standard",style:{width:150},type:"text",label:n.I18n.t("Longitude \xB0"),value:(d||"").toString(),onChange:r=>this.onChange("longitude",r.target.value)}),e?null:t().createElement("div",{style:{width:"calc(100% - 10px)"}},n.I18n.t("Help")),t().createElement("h2",{style:{width:"calc(100% - 10px)",marginTop:20,backgroundColor:this.props.themeType==="dark"?"#333":"#ccc",color:this.props.themeType==="dark"?"#FFF":"#000",padding:"2px 8px",borderRadius:3}},n.I18n.t("Day time settings")),t().createElement("div",{style:{width:"calc(100% - 10px)",display:"flex",gap:8,flexWrap:"wrap",backgroundColor:this.props.themeType==="dark"?"#333":"#ccc",paddingTop:8,paddingLeft:8,paddingRight:8,paddingBottom:0,borderRadius:"5px 5px 0 0"}},t().createElement(i.FormControl,{variant:"standard",style:{width:250}},t().createElement(i.InputLabel,{shrink:!0},n.I18n.t("Time event")),t().createElement(i.Select,{variant:"standard",value:o||"_",onChange:r=>this.onChange("sunriseEvent",r.target.value==="_"?"":r.target.value)},t().createElement(i.MenuItem,{value:"_"},n.I18n.t("none")),t().createElement(i.MenuItem,{value:"nightEnd"},n.I18n.t("sch_astro_nightEnd")),t().createElement(i.MenuItem,{value:"nauticalDawn"},n.I18n.t("sch_astro_nauticalDawn")),t().createElement(i.MenuItem,{value:"dawn"},n.I18n.t("sch_astro_dawn")),t().createElement(i.MenuItem,{value:"sunrise"},n.I18n.t("sch_astro_sunrise")),t().createElement(i.MenuItem,{value:"sunriseEnd"},n.I18n.t("sch_astro_sunriseEnd")),t().createElement(i.MenuItem,{value:"goldenHourEnd"},n.I18n.t("sch_astro_goldenHourEnd"))),t().createElement(i.FormHelperText,null,n.I18n.t("Used as start of the daytime"))),t().createElement(i.TextField,{style:{width:80},variant:"standard",disabled:!this.state.sunriseEvent,label:n.I18n.t("Offset"),value:p||0,helperText:n.I18n.t("in minutes"),onChange:r=>this.onChange("sunriseOffset",r.target.value)}),t().createElement(i.FormControl,{variant:"standard",style:{width:150}},t().createElement(i.InputLabel,{shrink:!0},n.I18n.t("But not earlier")),t().createElement(v.TimePicker,{className:`astroToolbarTime ${this.props.themeType}`,disabled:!this.state.sunriseEvent,ampm:!!this.state.ampm,views:["hours","minutes"],value:m||new Date(2e3,0,1,0,0),onChange:r=>this.onChange("sunriseLimitStart",new Date(r))})),t().createElement(i.FormControl,{variant:"standard",style:{width:150}},t().createElement(i.InputLabel,{shrink:!0},n.I18n.t("And not later")),t().createElement(v.TimePicker,{className:`astroToolbarTime ${this.props.themeType}`,disabled:!this.state.sunriseEvent,ampm:!!this.state.ampm,views:["hours","minutes"],value:f||new Date(2e3,0,1,0,0),onChange:r=>this.onChange("sunriseLimitEnd",new Date(r))}))),this.props.alive?t().createElement("div",{style:{backgroundColor:this.props.themeType==="dark"?"#333":"#ccc",width:"calc(100% - 10px)",paddingTop:20,paddingLeft:8,paddingRight:8,paddingBottom:8,borderRadius:"0 0 5px 5px"}},t().createElement("span",{style:{marginRight:8}},n.I18n.t("Next sunrise")),t().createElement("span",null,this.state.nextSunriseServer,this.state.nextSunrise!==this.state.nextSunriseServer?` ${n.I18n.t("Local time")}: ${this.state.nextSunrise}`:"")):null,t().createElement("div",{style:{width:"calc(100% - 10px)",display:"flex",gap:8,marginTop:30,flexWrap:"wrap",backgroundColor:this.props.themeType==="dark"?"#333":"#ccc",paddingTop:8,paddingLeft:8,paddingRight:8,paddingBottom:0,borderRadius:"5px 5px 0 0"}},t().createElement(i.FormControl,{variant:"standard",style:{width:250}},t().createElement(i.InputLabel,{shrink:!0},n.I18n.t("Time event")),t().createElement(i.Select,{variant:"standard",value:c||"_",onChange:r=>this.onChange("sunsetEvent",r.target.value==="_"?"":r.target.value)},t().createElement(i.MenuItem,{value:"_"},n.I18n.t("none")),t().createElement(i.MenuItem,{value:"goldenHour"},n.I18n.t("sch_astro_goldenHour")),t().createElement(i.MenuItem,{value:"sunsetStart"},n.I18n.t("sch_astro_sunsetStart")),t().createElement(i.MenuItem,{value:"sunset"},n.I18n.t("sch_astro_sunset")),t().createElement(i.MenuItem,{value:"dusk"},n.I18n.t("sch_astro_dusk")),t().createElement(i.MenuItem,{value:"nauticalDusk"},n.I18n.t("sch_astro_nauticalDusk")),t().createElement(i.MenuItem,{value:"night"},n.I18n.t("sch_astro_night"))),t().createElement(i.FormHelperText,null,n.I18n.t("Used as end of the daytime"))),t().createElement(i.TextField,{style:{width:80},variant:"standard",disabled:!this.state.sunsetEvent,label:n.I18n.t("Offset"),value:E||0,helperText:n.I18n.t("in minutes"),onChange:r=>this.onChange("sunsetOffset",r.target.value)}),t().createElement(i.FormControl,{variant:"standard",style:{width:150}},t().createElement(i.InputLabel,{shrink:!0},n.I18n.t("But not earlier")),t().createElement(v.TimePicker,{className:`astroToolbarTime ${this.props.themeType}`,disabled:!this.state.sunsetEvent,ampm:!!this.state.ampm,views:["hours","minutes"],value:K||new Date(2e3,0,1,0,0),onChange:r=>this.onChange("sunsetLimitStart",new Date(r))})),t().createElement(i.FormControl,{variant:"standard",style:{width:150}},t().createElement(i.InputLabel,{shrink:!0},n.I18n.t("And not later")),t().createElement(v.TimePicker,{className:`astroToolbarTime ${this.props.themeType}`,disabled:!this.state.sunsetEvent,ampm:!!this.state.ampm,views:["hours","minutes"],value:Q||new Date(2e3,0,1,0,0),onChange:r=>this.onChange("sunsetLimitEnd",new Date(r))}))),this.props.alive?t().createElement("div",{style:{backgroundColor:this.props.themeType==="dark"?"#333":"#ccc",width:"calc(100% - 10px)",paddingTop:20,paddingLeft:8,paddingRight:8,paddingBottom:8,borderRadius:"0 0 5px 5px",marginBottom:g?20:0}},t().createElement("span",{style:{marginRight:8}},n.I18n.t("Next sunset")),t().createElement("span",null,this.state.nextSunsetServer,this.state.nextSunset!==this.state.nextSunsetServer?` ${n.I18n.t("Local time")}: ${this.state.nextSunset}`:"")):null)),t().createElement("div",{style:{width:g?"100%":"calc(50% - 5px)",display:g?"block":"inline-block",minHeight:350}},this.renderMap())))}}x.propTypes={socket:h().object.isRequired,themeType:h().string,themeName:h().string,style:h().object,className:h().string,data:h().object.isRequired,attr:h().string,schema:h().object,onError:h().func,onChange:h().func};const Z={Astro:x}}}]);

//# sourceMappingURL=src_Components_jsx-webpack_sharing_consume_default_leaflet_leaflet-node_modules_leaflet_dist_-363029.2ab73031.chunk.js.map